<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.repository.mybatis.users.IUserRepository">

    <resultMap id="BaseResultMap" type="com.domain.users.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_uuid" jdbcType="CHAR" property="userUuid"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="last_active_time" jdbcType="TIMESTAMP" property="lastActiveTime"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, user_uuid, user_name, password, name, age, last_active_time
    </sql>

    <select id="getAllUser" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
    </select>

    <select id="getUserById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id=#{value}
    </select>

    <select id="getUserByUserName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where user_name=#{value}
    </select>

    <select id="getUserByUuid" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where user_uuid=#{value}
    </select>


    <select id="userPageList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_user
        <where>
            <if test="name != null and name != ''">
                name like  concat('%',#{name},'%')
            </if>
        </where>
         ORDER BY id
        <if test="offset != null and limit != null ">
            limit #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="userPageCount" resultType="java.lang.Integer">
        select count(*) from t_user
        <where>
            <if test="name != null and name != ''">
                name like concat('%', #{name}, '%')
            </if>
        </where>
    </select>


    <insert id="insertUser" parameterType="com.domain.users.User"
            useGeneratedKeys="true" keyProperty="id">
		insert into t_user
		(user_uuid,user_name,password,name,age, last_active_time)
		values
		(#{userUuid},#{userName},#{password},#{name},#{age},#{lastActiveTime})
	</insert>

    <insert id="insertUsers" parameterType="java.util.List"
            useGeneratedKeys="true" keyProperty="id">
        insert into t_user
        (user_uuid,user_name,password,name,age,last_active_time)
        values
        <foreach collection="list" item="item" index="index"
                 separator=",">
            (#{item.userUuid},#{item.userName},#{item.password},#{item.name},#{item.age},
            #{item.lastActiveTime})
        </foreach>
    </insert>


    <update id="updateUser" parameterType="com.domain.users.User">
        update t_user
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="age != null">age = #{age},</if>
            <if test="lastActiveTime != null">last_active_time = #{lastActiveTime},</if>
        </set>
        where id = #{id}
    </update>


    <update id="updateUsersAge">
        update t_user set age = #{age} where id in
        <foreach item="id" collection="idslist" open="(" separator=","
                 close=")">
            #{id}
        </foreach>
    </update>


    <delete id="deleteUsersByIds">
        delete from t_user where id in
        <foreach item="id" collection="list" open="(" separator=","
                 close=")">
            #{id}
        </foreach>
    </delete>


</mapper>